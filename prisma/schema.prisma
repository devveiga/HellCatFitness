generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Aluno {
  id           Int       @id @default(autoincrement())
  nome         String
  idade        Int
  email        String
  telefone     String?
  dataCadastro DateTime?
  instrutor    Instrutor? @relation(fields: [instrutorId], references: [id])
  instrutorId  Int?
  treinos      Treino[]
  usuario      Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId    String      @db.VarChar(36)
  @@map("alunos")
}

model Instrutor {
  id     Int     @id @default(autoincrement())
  nome   String
  alunos Aluno[]
}

model Treino {
  id            Int       @id @default(autoincrement())
  descricao     String
  dataInicio    DateTime
  ativo         Boolean   @default(true)
  aluno         Aluno     @relation(fields: [alunoId], references: [id])
  alunoId       Int
  exercicios    TreinoExercicio[]
}

model Exercicio {
  id             Int       @id @default(autoincrement())
  nome           String
  grupoMuscular  String
  descricao      String?

  // Relação: Um exercício pode estar em vários treinos
  treinos        TreinoExercicio[]
}

model TreinoExercicio {
  id            Int       @id @default(autoincrement())

  // Relação: Treino associado
  treino        Treino    @relation(fields: [treinoId], references: [id])
  treinoId      Int

  // Relação: Exercício associado
  exercicio     Exercicio @relation(fields: [exercicioId], references: [id])
  exercicioId   Int

  // Dados adicionais do exercício no treino
  series        Int
  repeticoes    Int
  carga         Float?
}
model Usuario {
  id            String       @db.VarChar(36) @id @default(uuid())
  nome          String       @db.VarChar(50)
  email         String       @db.VarChar(100) @unique()
  senha         String       @db.VarChar(60)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  alunos        Aluno[]
  logs          Log[]
  perguntaSecreta String? @db.VarChar(100)
  respostaSecreta String? @db.VarChar(200)
  @@map("usuarios")
}

model Log {
  id            Int         @id @default(autoincrement())
  usuario       Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId     String      @db.VarChar(36)
  descricao     String      @db.VarChar(60)
  complemento   String      @db.VarChar(200)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  @@map("logs")
}